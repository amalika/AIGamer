---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2019-09-05 17:32
---

-- tagList 指定界面列表
function F获取指定当前页面(tagList) --获取当前页面函数
    local res = '未知页面'
	local x, y = -1,-1
    for _, v in pairs(tagList) do
        --		print(v)
        x, y = F多点找色(v[2])
        if x >=0 and y>=0 then
--            globalX = x;
--            globalY = y;
            res = v[1]  --界面名称
            break
        end
    end
    --sysLog("F获取指定当前页面 ->"..res.."  坐标点: x->"..x.."  y-> "..y)
    return res,x,y
end

function FFindPageByTable(tab)
    local res = '未知页面'
    for _, v in pairs(tab) do
        local x, y = F多点找色(v['range'])
        if x >=0 and y>=0 then
            globalX = x;
            globalY = y;
            res = _  --界面名称
            break
        end
    end
    sysLog("F获取指定当前页面 ->"..res.."  坐标点: x->"..globalX.."  y-> "..globalY)
    return res
end


function F多点找色(v)
	local number = 90
	if v[3] ~= nil then
		number = v[3]
		
	end
    return findColor(v[1],v[2],number, 0, 0, 0)
end


-- 检查移动参数
indexRange = {
    { 188, 86, 188 + 154, 86 + 36 }, { "0xafa898-0x222222" }, "0123456789,()"
}
-- 检查是否移动
function FIsMove()
    -- 战斗中不检查
    if not isCombat then
--        mSleep(math.random(100,300))
        local code, text = ocr:getText({
            rect = indexRange[1], -- 范围
            diff = indexRange[2], -- 色差
            whitelist = indexRange[3], -- 白名单
        })
--        sysLog("code = " .. tostring(code) .. ", text = " .. text)
        if code == 0 then
            if oldIndex == text then
                -- 没有移动
                isMove = false
                task.execTimer(3000, FIsMove)
            else
                isMove = true
                oldIndex = text;
                task.execTimer(100, FIsMove)
            end
        else
            toast("识别失败: " .. text)
            isMove = false
            task.execTimer(100, FIsMove)
        end
    end
	 sysLog("移动状态: " .. isMove)
end


function F关闭所有页面()
    while true do
        mSleep(math.random(800,1000))
        local var,x,y = F获取指定当前页面(closeList)
        if var == "未知页面" then
            return
        else
            F单击(x,y)
            mSleep(math.random(800,1000))
        end
    end
end

function F单击(x,y)
    if x ~= nil and y ~= nil then
        globalX,globalY = x,y
    end
    local hudId = createHUD()
    print("F单击 -> x :"..globalX..", y:"..globalY)
    local loaclX = math.random(globalX,globalX+10)
    local loaclY = math.random(globalY,globalY+10)
    showHUD(hudId,"",5,"0xffff0000","14.png",0,globalX,globalY,80,80)      --显示HUD内容

    touchDown(1, loaclX, loaclY)
    mSleep(math.random(100,300))
    touchMove(1, loaclX, loaclY)
    mSleep(math.random(100,300))
    touchUp(1, loaclX, loaclY)
    hideHUD(hudId)
	mSleep(300)
end

--[[
dir == 滑动方向  -1 上滑动 1 下滑
way == 滑动方式  1 单位滑动, 2 极限滑动(滑动到最上 或者最下)
param
]]

function FMovePage(dir, way, renge)

    if dir == -1 then
        -- 上滑动 取右下坐标x2,y2
        globalX,globalY =math.random(renge.x1,renge.x2),renge.y2
    else
        -- 下滑动 取左上角坐标x1,y1
        globalX,globalY =math.random(renge.x1,renge.x2),renge.y1
    end
    local i = 3;
    while i>0 do
        local hudId = createHUD()
        local y = 0;
        mSleep(math.random(300,500))
        touchDown(1, globalX, globalY)
        showHUD(hudId,"",1,"0xffff0000","14.png",0,globalX,globalY,90,90)      --显示HUD内容

        mSleep(math.random(300,450))
        if way == 1 then
            local aa = dir*renge.rex
            y = globalY +  aa
            print("单位滑动:"..aa)
        else
            --极限滑动, 区间在200 - 300 内随机
            local aa = dir*math.random(200,300)
            y = globalY + aa
            print("极限移动:"..aa)
        end

        touchMove(1, globalX, y)
        mSleep(math.random(500,800))
        touchUp(1, globalX, y)

        if way == 1 then
            return
        else
            i = i-1
        end
        hideHUD(hudId)
    end


end

function appInit()

    -- 获取屏幕分辨率
    height, width = getScreenSize();
    -- appId
    appId = "com.netease.my";
    init(appId, 1);
    -- app 是否在运行
    local isRun = appIsRunning(appId);
    -- 前置appID
    local page = frontAppName();

    sysLog(isRun);
    sysLog(page);

    if (isRun == 0) or (page ~= appId) then
        toast("当前程序不是目标程序, 准备启动....");
        runApp(appId)
        mSleep(1000 * 2)
    end
    toast("游戏运行中....");
    mSleep(1000 * 2)
end

function deepcopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in next, orig, nil do
            copy[deepcopy(orig_key)] = deepcopy(orig_value)
        end
        setmetatable(copy, deepcopy(getmetatable(orig)))
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end